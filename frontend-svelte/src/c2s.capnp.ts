/* tslint:disable */

/**
 * This file has been automatically generated by the [capnpc-ts utility](https://github.com/jdiaz5513/capnp-ts).
 */

import * as capnp from 'capnp-ts';
import { ObjectSize as __O, Struct as __S } from 'capnp-ts';
export const _capnpFileId = 'a647b63e43643d15';
export enum GameRef_Which {
	CREATE = 0,
	JOIN = 1
}
export class GameRef extends __S {
	static readonly CREATE = GameRef_Which.CREATE;
	static readonly JOIN = GameRef_Which.JOIN;
	static readonly _capnp = { displayName: 'GameRef', id: '8b0466fdff882b4a', size: new __O(8, 0) };
	isCreate(): boolean {
		return __S.getUint16(0, this) === 0;
	}
	setCreate(): void {
		__S.setUint16(0, 0, this);
	}
	getJoin(): number {
		__S.testWhich('join', __S.getUint16(0, this), 1, this);
		return __S.getUint32(4, this);
	}
	isJoin(): boolean {
		return __S.getUint16(0, this) === 1;
	}
	setJoin(value: number): void {
		__S.setUint16(0, 1, this);
		__S.setUint32(4, value, this);
	}
	toString(): string {
		return 'GameRef_' + super.toString();
	}
	which(): GameRef_Which {
		return __S.getUint16(0, this);
	}
}
export class Identify extends __S {
	static readonly _capnp = { displayName: 'Identify', id: '94478eb1d0979310', size: new __O(0, 2) };
	getName(): string {
		return __S.getText(0, this);
	}
	setName(value: string): void {
		__S.setText(0, value, this);
	}
	adoptGame(value: capnp.Orphan<GameRef>): void {
		__S.adopt(value, __S.getPointer(1, this));
	}
	disownGame(): capnp.Orphan<GameRef> {
		return __S.disown(this.getGame());
	}
	getGame(): GameRef {
		return __S.getStruct(1, GameRef, this);
	}
	hasGame(): boolean {
		return !__S.isNull(__S.getPointer(1, this));
	}
	initGame(): GameRef {
		return __S.initStructAt(1, GameRef, this);
	}
	setGame(value: GameRef): void {
		__S.copyFrom(value, __S.getPointer(1, this));
	}
	toString(): string {
		return 'Identify_' + super.toString();
	}
}
export enum Msg_Which {
	IDENTIFY = 0,
	START_GAME = 1
}
export class Msg extends __S {
	static readonly IDENTIFY = Msg_Which.IDENTIFY;
	static readonly START_GAME = Msg_Which.START_GAME;
	static readonly _capnp = { displayName: 'Msg', id: 'e9bcdba3fd16cfcb', size: new __O(8, 1) };
	adoptIdentify(value: capnp.Orphan<Identify>): void {
		__S.setUint16(0, 0, this);
		__S.adopt(value, __S.getPointer(0, this));
	}
	disownIdentify(): capnp.Orphan<Identify> {
		return __S.disown(this.getIdentify());
	}
	getIdentify(): Identify {
		__S.testWhich('identify', __S.getUint16(0, this), 0, this);
		return __S.getStruct(0, Identify, this);
	}
	hasIdentify(): boolean {
		return !__S.isNull(__S.getPointer(0, this));
	}
	initIdentify(): Identify {
		__S.setUint16(0, 0, this);
		return __S.initStructAt(0, Identify, this);
	}
	isIdentify(): boolean {
		return __S.getUint16(0, this) === 0;
	}
	setIdentify(value: Identify): void {
		__S.setUint16(0, 0, this);
		__S.copyFrom(value, __S.getPointer(0, this));
	}
	isStartGame(): boolean {
		return __S.getUint16(0, this) === 1;
	}
	setStartGame(): void {
		__S.setUint16(0, 1, this);
	}
	toString(): string {
		return 'Msg_' + super.toString();
	}
	which(): Msg_Which {
		return __S.getUint16(0, this);
	}
}
