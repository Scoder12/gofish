/* tslint:disable */

/**
 * This file has been automatically generated by the [capnpc-ts utility](https://github.com/jdiaz5513/capnp-ts).
 */

import * as capnp from "capnp-ts";
import { ObjectSize as __O, Struct as __S, Interface as __I } from 'capnp-ts';
export const _capnpFileId = "c668f14b39d58553";
export class Error extends __S {
    static readonly _capnp = { displayName: "Error", id: "a5a64dcd85f68b6e", size: new __O(0, 1) };
    getMsg(): string { return __S.getText(0, this); }
    setMsg(value: string): void { __S.setText(0, value, this); }
    toString(): string { return "Error_" + super.toString(); }
}
export class GameCreated extends __S {
    static readonly _capnp = { displayName: "GameCreated", id: "c0efd63378b1868d", size: new __O(8, 0) };
    getId(): number { return __S.getUint32(0, this); }
    setId(value: number): void { __S.setUint32(0, value, this); }
    toString(): string { return "GameCreated_" + super.toString(); }
}
export enum Msg_Which {
    ERROR = 0,
    GAME_CREATED = 1
}
export class Msg extends __S {
    static readonly ERROR = Msg_Which.ERROR;
    static readonly GAME_CREATED = Msg_Which.GAME_CREATED;
    static readonly _capnp = { displayName: "Msg", id: "9e33ed278926da05", size: new __O(8, 1) };
    adoptError(value: capnp.Orphan<Error>): void {
        __S.setUint16(0, 0, this);
        __S.adopt(value, __S.getPointer(0, this));
    }
    disownError(): capnp.Orphan<Error> { return __S.disown(this.getError()); }
    getError(): Error {
        __S.testWhich("error", __S.getUint16(0, this), 0, this);
        return __S.getStruct(0, Error, this);
    }
    hasError(): boolean { return !__S.isNull(__S.getPointer(0, this)); }
    initError(): Error {
        __S.setUint16(0, 0, this);
        return __S.initStructAt(0, Error, this);
    }
    isError(): boolean { return __S.getUint16(0, this) === 0; }
    setError(value: Error): void {
        __S.setUint16(0, 0, this);
        __S.copyFrom(value, __S.getPointer(0, this));
    }
    adoptGameCreated(value: capnp.Orphan<GameCreated>): void {
        __S.setUint16(0, 1, this);
        __S.adopt(value, __S.getPointer(0, this));
    }
    disownGameCreated(): capnp.Orphan<GameCreated> { return __S.disown(this.getGameCreated()); }
    getGameCreated(): GameCreated {
        __S.testWhich("gameCreated", __S.getUint16(0, this), 1, this);
        return __S.getStruct(0, GameCreated, this);
    }
    hasGameCreated(): boolean { return !__S.isNull(__S.getPointer(0, this)); }
    initGameCreated(): GameCreated {
        __S.setUint16(0, 1, this);
        return __S.initStructAt(0, GameCreated, this);
    }
    isGameCreated(): boolean { return __S.getUint16(0, this) === 1; }
    setGameCreated(value: GameCreated): void {
        __S.setUint16(0, 1, this);
        __S.copyFrom(value, __S.getPointer(0, this));
    }
    toString(): string { return "Msg_" + super.toString(); }
    which(): Msg_Which { return __S.getUint16(0, this); }
}
